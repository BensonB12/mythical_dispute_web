apiVersion: apps/v1
kind: Deployment
metadata:
  name: mythical-api
  namespace: benson
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mythical-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: mythical-api
    spec:
      initContainers:
        - name: init-seed-images
          image: ${DOCKERHUB_USERNAME}/mythical_inventory_images:4
          command:
            [
              "sh",
              "-c",
              'if [ -z "$(ls -A /app/images)" ]; then cp -r /seededImages/* /app/images/; fi',
            ]
          volumeMounts:
            - name: images-storage
              mountPath: /app/images
      containers:
        - name: mythical-api
          image: ${DOCKERHUB_USERNAME}/mythical_api:${IMAGE_TAG}
          env:
            - name: POSTGRES_DB
              value: ${PG_DB}
            - name: POSTGRES_USER
              value: ${PG_USER}
            - name: POSTGRES_PASSWORD
              value: ${PG_PASSWORD}
            - name: POSTGRES_HOST
              value: mythical-db-svc
            - name: POSTGRES_PORT
              value: "5432"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
      volumes:
        - name: images-storage
          persistentVolumeClaim:
            claimName: mythical-img-pvc
